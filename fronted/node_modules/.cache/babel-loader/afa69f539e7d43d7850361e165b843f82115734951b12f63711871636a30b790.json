{"ast":null,"code":"// ==========================================\n// FRONTEND/SRC/SERVICIOS/API.JS - COMPLETO\n// ==========================================\nconst API_BASE_URL = 'http://localhost:3000/api/v1';\n\n// Función base\nexport const apiRequest = async (endpoint, options = {}) => {\n  const url = `${API_BASE_URL}${endpoint}`;\n  try {\n    console.log(`🔄 API Request: ${options.method || 'GET'} ${url}`);\n    const response = await fetch(url, {\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers\n      },\n      ...options\n    });\n    const data = await response.json();\n    if (!response.ok) {\n      throw new Error(data.message || `Error ${response.status}`);\n    }\n    console.log(`✅ API Success: ${endpoint}`, data);\n    return data;\n  } catch (error) {\n    console.error(`❌ API Error: ${endpoint}`, error);\n    throw error;\n  }\n};\n\n// API PRODUCTOS\nexport const productosAPI = {\n  obtenerTodos: async (filtros = {}) => {\n    const params = new URLSearchParams();\n    Object.keys(filtros).forEach(key => {\n      if (filtros[key]) params.append(key, filtros[key]);\n    });\n    const endpoint = `/productos${params.toString() ? `?${params.toString()}` : ''}`;\n    return await apiRequest(endpoint);\n  },\n  obtenerPorId: async id => {\n    return await apiRequest(`/productos/${id}`);\n  },\n  crear: async producto => {\n    return await apiRequest('/productos', {\n      method: 'POST',\n      body: JSON.stringify(producto)\n    });\n  },\n  actualizar: async (id, producto) => {\n    return await apiRequest(`/productos/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(producto)\n    });\n  },\n  eliminar: async id => {\n    return await apiRequest(`/productos/${id}`, {\n      method: 'DELETE'\n    });\n  },\n  obtenerCategorias: async () => {\n    return await apiRequest('/productos/categorias');\n  },\n  obtenerMarcas: async () => {\n    return await apiRequest('/productos/marcas');\n  }\n};\n\n// API DASHBOARD\nexport const dashboardAPI = {\n  obtenerEstadisticas: async () => {\n    return await apiRequest('/dashboard/stats');\n  }\n};\n\n// API SISTEMA\nexport const sistemaAPI = {\n  healthCheck: async () => {\n    const response = await fetch('http://localhost:3000/health');\n    return await response.json();\n  },\n  test: async () => {\n    return await apiRequest('/test');\n  }\n};\n\n// EXPORTACIÓN DEFAULT\nconst api = {\n  productos: productosAPI,\n  dashboard: dashboardAPI,\n  sistema: sistemaAPI\n};\nexport default api;","map":{"version":3,"names":["API_BASE_URL","apiRequest","endpoint","options","url","console","log","method","response","fetch","headers","data","json","ok","Error","message","status","error","productosAPI","obtenerTodos","filtros","params","URLSearchParams","Object","keys","forEach","key","append","toString","obtenerPorId","id","crear","producto","body","JSON","stringify","actualizar","eliminar","obtenerCategorias","obtenerMarcas","dashboardAPI","obtenerEstadisticas","sistemaAPI","healthCheck","test","api","productos","dashboard","sistema"],"sources":["C:/ferremasapi/fronted/src/servicios/api.js"],"sourcesContent":["// ==========================================\r\n// FRONTEND/SRC/SERVICIOS/API.JS - COMPLETO\r\n// ==========================================\r\nconst API_BASE_URL = 'http://localhost:3000/api/v1';\r\n\r\n// Función base\r\nexport const apiRequest = async (endpoint, options = {}) => {\r\n  const url = `${API_BASE_URL}${endpoint}`;\r\n  \r\n  try {\r\n    console.log(`🔄 API Request: ${options.method || 'GET'} ${url}`);\r\n    \r\n    const response = await fetch(url, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...options.headers,\r\n      },\r\n      ...options,\r\n    });\r\n    \r\n    const data = await response.json();\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(data.message || `Error ${response.status}`);\r\n    }\r\n    \r\n    console.log(`✅ API Success: ${endpoint}`, data);\r\n    return data;\r\n  } catch (error) {\r\n    console.error(`❌ API Error: ${endpoint}`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// API PRODUCTOS\r\nexport const productosAPI = {\r\n  obtenerTodos: async (filtros = {}) => {\r\n    const params = new URLSearchParams();\r\n    Object.keys(filtros).forEach(key => {\r\n      if (filtros[key]) params.append(key, filtros[key]);\r\n    });\r\n    \r\n    const endpoint = `/productos${params.toString() ? `?${params.toString()}` : ''}`;\r\n    return await apiRequest(endpoint);\r\n  },\r\n\r\n  obtenerPorId: async (id) => {\r\n    return await apiRequest(`/productos/${id}`);\r\n  },\r\n\r\n  crear: async (producto) => {\r\n    return await apiRequest('/productos', {\r\n      method: 'POST',\r\n      body: JSON.stringify(producto),\r\n    });\r\n  },\r\n\r\n  actualizar: async (id, producto) => {\r\n    return await apiRequest(`/productos/${id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(producto),\r\n    });\r\n  },\r\n\r\n  eliminar: async (id) => {\r\n    return await apiRequest(`/productos/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n  },\r\n\r\n  obtenerCategorias: async () => {\r\n    return await apiRequest('/productos/categorias');\r\n  },\r\n\r\n  obtenerMarcas: async () => {\r\n    return await apiRequest('/productos/marcas');\r\n  },\r\n};\r\n\r\n// API DASHBOARD\r\nexport const dashboardAPI = {\r\n  obtenerEstadisticas: async () => {\r\n    return await apiRequest('/dashboard/stats');\r\n  },\r\n};\r\n\r\n// API SISTEMA\r\nexport const sistemaAPI = {\r\n  healthCheck: async () => {\r\n    const response = await fetch('http://localhost:3000/health');\r\n    return await response.json();\r\n  },\r\n  \r\n  test: async () => {\r\n    return await apiRequest('/test');\r\n  },\r\n};\r\n\r\n// EXPORTACIÓN DEFAULT\r\nconst api = {\r\n  productos: productosAPI,\r\n  dashboard: dashboardAPI,\r\n  sistema: sistemaAPI,\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}