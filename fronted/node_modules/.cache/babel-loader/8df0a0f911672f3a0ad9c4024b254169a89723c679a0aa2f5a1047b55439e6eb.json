{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:3000/api/v1',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Interceptor para agregar el token a las peticiones\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    // Limpiar el token de caracteres innecesarios\n    const cleanToken = token.replace(/['\"]/g, '');\n    config.headers.Authorization = `Bearer ${cleanToken}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Interceptor para manejar errores\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 431) {\n    // Limpiar el token si está causando problemas\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport const testBackendConnection = async () => {\n  try {\n    const response = await api.get('/');\n    return {\n      success: true,\n      data: response.data\n    };\n  } catch (error) {\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","cleanToken","replace","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","testBackendConnection","get","success","data","message"],"sources":["C:/ferremasapi/fronted/src/servicios/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:3000/api/v1',\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// Interceptor para agregar el token a las peticiones\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      // Limpiar el token de caracteres innecesarios\r\n      const cleanToken = token.replace(/['\"]/g, '');\r\n      config.headers.Authorization = `Bearer ${cleanToken}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Interceptor para manejar errores\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 431) {\r\n      // Limpiar el token si está causando problemas\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const testBackendConnection = async () => {\r\n  try {\r\n    const response = await api.get('/');\r\n    return {\r\n      success: true,\r\n      data: response.data\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      success: false,\r\n      error: error.message\r\n    };\r\n  }\r\n};\r\n\r\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,8BAA8B;EACvCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACT;IACA,MAAMG,UAAU,GAAGH,KAAK,CAACI,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;IAC7CL,MAAM,CAACJ,OAAO,CAACU,aAAa,GAAG,UAAUF,UAAU,EAAE;EACvD;EACA,OAAOJ,MAAM;AACf,CAAC,EACAO,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAd,GAAG,CAACI,YAAY,CAACa,QAAQ,CAACX,GAAG,CAC1BW,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClC;IACAV,YAAY,CAACW,UAAU,CAAC,OAAO,CAAC;IAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMU,qBAAqB,GAAG,MAAAA,CAAA,KAAY;EAC/C,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMjB,GAAG,CAACyB,GAAG,CAAC,GAAG,CAAC;IACnC,OAAO;MACLC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAEV,QAAQ,CAACU;IACjB,CAAC;EACH,CAAC,CAAC,OAAOb,KAAK,EAAE;IACd,OAAO;MACLY,OAAO,EAAE,KAAK;MACdZ,KAAK,EAAEA,KAAK,CAACc;IACf,CAAC;EACH;AACF,CAAC;AAED,eAAe5B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}