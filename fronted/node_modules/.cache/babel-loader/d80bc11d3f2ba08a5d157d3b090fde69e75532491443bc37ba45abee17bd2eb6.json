{"ast":null,"code":"var _jsxFileName = \"C:\\\\ferrenuevo\\\\fronted\\\\src\\\\contexto\\\\ContextoAuth.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { servicioAuth } from '../servicios/servicioAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContextoAuth = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(ContextoAuth);\n  if (!context) {\n    throw new Error('useAuth debe ser usado dentro de AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [usuario, setUsuario] = useState(null);\n  const [cargando, setCargando] = useState(true);\n  useEffect(() => {\n    // Verificar si hay un usuario en localStorage\n    const usuarioGuardado = localStorage.getItem('usuario');\n    const tokenGuardado = localStorage.getItem('token');\n    if (usuarioGuardado && tokenGuardado) {\n      setUsuario(JSON.parse(usuarioGuardado));\n    }\n    setCargando(false);\n  }, []);\n  const iniciarSesion = async credenciales => {\n    setCargando(true);\n    try {\n      const response = await servicioAuth.iniciarSesion(credenciales);\n      const data = response.data;\n      if (data && data.token && data.usuario) {\n        setUsuario(data.usuario);\n        localStorage.setItem('usuario', JSON.stringify(data.usuario));\n        localStorage.setItem('token', data.token);\n        return {\n          exito: true\n        };\n      } else {\n        return {\n          exito: false,\n          mensaje: (response === null || response === void 0 ? void 0 : response.message) || 'Credenciales incorrectas'\n        };\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        exito: false,\n        mensaje: (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.mensaje) || 'Error en el servidor'\n      };\n    } finally {\n      setCargando(false);\n    }\n  };\n  const registrarse = async datosRegistro => {\n    setCargando(true);\n    try {\n      // Simular registro\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      const usuarioData = {\n        id: Date.now(),\n        nombre: datosRegistro.nombre,\n        email: datosRegistro.email,\n        rol: 'cliente',\n        avatar: null\n      };\n      setUsuario(usuarioData);\n      localStorage.setItem('usuario', JSON.stringify(usuarioData));\n      localStorage.setItem('token', 'fake-jwt-token');\n      return {\n        exito: true\n      };\n    } catch (error) {\n      return {\n        exito: false,\n        mensaje: 'Error en el registro'\n      };\n    } finally {\n      setCargando(false);\n    }\n  };\n  const cerrarSesion = () => {\n    setUsuario(null);\n    localStorage.removeItem('usuario');\n    localStorage.removeItem('token');\n  };\n  const valor = {\n    usuario,\n    cargando,\n    iniciarSesion,\n    registrarse,\n    cerrarSesion\n  };\n  return /*#__PURE__*/_jsxDEV(ContextoAuth.Provider, {\n    value: valor,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"S8/JCBTkVpYKJ/1lvIrTttILOk8=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","servicioAuth","jsxDEV","_jsxDEV","ContextoAuth","useAuth","_s","context","Error","AuthProvider","children","_s2","usuario","setUsuario","cargando","setCargando","usuarioGuardado","localStorage","getItem","tokenGuardado","JSON","parse","iniciarSesion","credenciales","response","data","token","setItem","stringify","exito","mensaje","message","error","_error$response","_error$response$data","registrarse","datosRegistro","Promise","resolve","setTimeout","usuarioData","id","Date","now","nombre","email","rol","avatar","cerrarSesion","removeItem","valor","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/ferrenuevo/fronted/src/contexto/ContextoAuth.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { servicioAuth } from '../servicios/servicioAuth';\r\n\r\nconst ContextoAuth = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(ContextoAuth);\r\n  if (!context) {\r\n    throw new Error('useAuth debe ser usado dentro de AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [usuario, setUsuario] = useState(null);\r\n  const [cargando, setCargando] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Verificar si hay un usuario en localStorage\r\n    const usuarioGuardado = localStorage.getItem('usuario');\r\n    const tokenGuardado = localStorage.getItem('token');\r\n    \r\n    if (usuarioGuardado && tokenGuardado) {\r\n      setUsuario(JSON.parse(usuarioGuardado));\r\n    }\r\n    \r\n    setCargando(false);\r\n  }, []);\r\n\r\n  const iniciarSesion = async (credenciales) => {\r\n    setCargando(true);\r\n    \r\n    try {\r\n      const response = await servicioAuth.iniciarSesion(credenciales);\r\n      const data = response.data;\r\n      if (data && data.token && data.usuario) {\r\n        setUsuario(data.usuario);\r\n        localStorage.setItem('usuario', JSON.stringify(data.usuario));\r\n        localStorage.setItem('token', data.token);\r\n        return { exito: true };\r\n      } else {\r\n        return { exito: false, mensaje: response?.message || 'Credenciales incorrectas' };\r\n      }\r\n    } catch (error) {\r\n      return { exito: false, mensaje: error?.response?.data?.mensaje || 'Error en el servidor' };\r\n    } finally {\r\n      setCargando(false);\r\n    }\r\n  };\r\n\r\n  const registrarse = async (datosRegistro) => {\r\n    setCargando(true);\r\n    \r\n    try {\r\n      // Simular registro\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      const usuarioData = {\r\n        id: Date.now(),\r\n        nombre: datosRegistro.nombre,\r\n        email: datosRegistro.email,\r\n        rol: 'cliente',\r\n        avatar: null\r\n      };\r\n      \r\n      setUsuario(usuarioData);\r\n      localStorage.setItem('usuario', JSON.stringify(usuarioData));\r\n      localStorage.setItem('token', 'fake-jwt-token');\r\n      \r\n      return { exito: true };\r\n    } catch (error) {\r\n      return { exito: false, mensaje: 'Error en el registro' };\r\n    } finally {\r\n      setCargando(false);\r\n    }\r\n  };\r\n\r\n  const cerrarSesion = () => {\r\n    setUsuario(null);\r\n    localStorage.removeItem('usuario');\r\n    localStorage.removeItem('token');\r\n  };\r\n\r\n  const valor = {\r\n    usuario,\r\n    cargando,\r\n    iniciarSesion,\r\n    registrarse,\r\n    cerrarSesion\r\n  };\r\n\r\n  return (\r\n    <ContextoAuth.Provider value={valor}>\r\n      {children}\r\n    </ContextoAuth.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}